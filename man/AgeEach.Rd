% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/age_length.R
\name{AgeEach}
\alias{AgeEach}
\alias{print.AgeEach}
\title{Assign age to each fish based on extant age-length data.}
\usage{
AgeEach(data, len, age, lenBreaks, sex = NULL)

\method{print}{AgeEach}(x, ...)
}
\arguments{
\item{data}{A dataframe with length and age fields (columns).}

\item{len}{Field name in data containing numeric lengths.}

\item{age}{Field name in data containing nummeric ages.}

\item{lenBreaks}{lenBreaks How lengths are binned. See \code{\link{cut}}
for more information. (Supplied to \code{breaks} in \code{cut}.)}

\item{sex}{(default NULL) Currently not used.}

\item{x}{Object of class 'AgeEach'.}

\item{...}{Currently not used.}
}
\value{
A list with age & bin diagnostics along with
   a numeric vector of ages, with length = \code{nrow(data)}.
}
\description{
\code{AgeEach} inspired by \code{FSA::alkIndivAge}. Here
\code{AgeEach} output is more tailored for use within this package.
\code{AgeEach} handles age assignment at the length bin level, so
   instance of an age-length key is not required.
}
\section{Methods (by generic)}{
\itemize{
\item \code{print}: \code{print} method (See notes).
}}

\note{
Print method for convenience of output.
}
\examples{
# check range(trammel_catch[["FL"]])
len_breaks <- seq(from = 50, to = 220, by = 5)
#AgeEach(data = trammel_catch, len = FL, age = Age, lenBreaks = len_breaks)
}
